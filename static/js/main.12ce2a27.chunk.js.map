{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","href","onClick","title","content","App","useState","setSelectedTabId","currentTab","active","findIndex","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EACJH,EAAKI,MAAK,SAACC,GAAD,OACRA,EAAIC,KAAOL,MACPD,EAAK,GAGb,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GAAD,OACR,oBAEE,UAAQ,MACRE,UACEF,EAAIC,KAAOH,EAAYG,GACnB,YACA,GANR,SASE,mBACEG,KAAI,WAAMJ,EAAIC,IACd,UAAQ,UACRI,QAAS,WACHL,EAAIC,KAAOH,EAAYG,IACzBJ,EAAcG,IALpB,SASGA,EAAIM,SAjBFN,EAAIC,WAwBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYS,cC3CRZ,EAAc,CACzB,CAAEM,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASd,EAAK,IAAxD,mBAAOC,EAAP,KAAsBc,EAAtB,KAUA,OACE,sBAAKR,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAN,EAAcU,SAGjB,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EAAcK,GAC7BJ,cAnBgB,SAACc,GACrB,IAAMC,EAASjB,EAAKkB,WAAU,SAACb,GAAD,OAC5BA,EAAIC,KAAOU,EAAWV,MAGxBS,EAAiBf,EAAKiB,WClB1BE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.12ce2a27.chunk.js","sourcesContent":["import { Tab } from '../../types/tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (currentTab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab: Tab = (\n    tabs.find((tab) => (\n      tab.id === selectedTabId\n    )) || tabs[0]\n  );\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              key={tab.id}\n              data-cy=\"Tab\"\n              className={\n                tab.id === selectedTab.id\n                  ? 'is-active'\n                  : ''\n              }\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (tab.id !== selectedTab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0]);\n\n  const onTabSelected = (currentTab: Tab) => {\n    const active = tabs.findIndex((tab) => (\n      tab.id === currentTab.id\n    ));\n\n    setSelectedTabId(tabs[active]);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {selectedTabId.title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId.id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}