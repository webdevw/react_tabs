{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","title","href","onClick","currentTabId","chosenTabId","element","content","App","useState","setSelectedTabId","currentTab","active","findIndex","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EACJH,EAAKI,MAAK,SAACC,GAAD,OACRA,EAAIC,KAAOL,MACPD,EAAK,GAYb,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACH,GACT,IAAQC,EAAcD,EAAdC,GAAIG,EAAUJ,EAAVI,MAEZ,OACE,oBAEE,UAAQ,MACRF,UACED,IAAOH,EAAYG,GACf,YACA,GANR,SASE,mBACEI,KAAI,WAAMJ,GACV,UAAQ,UACRK,QAAS,kBA7BvBC,EA6B6CN,EA5B7CO,EA4BiDV,EAAYG,GA3B7DQ,EA2BiET,OAzB7DO,IAAiBC,GACnBX,EAAcY,IANM,IACtBF,EACAC,EACAC,GAwBY,SAKGL,KAbEH,UAqBf,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYY,cCpDRf,EAAc,CACzB,CAAEM,GAAI,QAASG,MAAO,QAASM,QAAS,eACxC,CAAET,GAAI,QAASG,MAAO,QAASM,QAAS,eACxC,CAAET,GAAI,QAASG,MAAO,QAASM,QAAS,gBAG7BC,EAAgB,WAC3B,MAAwCC,mBAASjB,EAAK,IAAtD,mBAAOG,EAAP,KAAoBe,EAApB,KACQZ,EAAcH,EAAdG,GAAIG,EAAUN,EAAVM,MAUZ,OACE,sBAAKF,UAAU,UAAf,UACE,qBAAIA,UAAU,QAAd,4BAEG,IACAE,KAGH,cAAC,EAAD,CACET,KAAMA,EACNC,cAAeK,EACfJ,cAnBgB,SAACiB,GACrB,IAAMC,EAASpB,EAAKqB,WAAU,SAAChB,GAAD,OAC5BA,EAAIC,KAAOa,EAAWb,MAGxBY,EAAiBlB,EAAKoB,WCnB1BE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.0b9fcc3b.chunk.js","sourcesContent":["import { Tab } from '../../types/tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (currentTab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab: Tab = (\n    tabs.find((tab) => (\n      tab.id === selectedTabId\n    )) || tabs[0]\n  );\n  const handleTabSelect = (\n    currentTabId: string,\n    chosenTabId: string,\n    element: Tab,\n  ) => {\n    if (currentTabId !== chosenTabId) {\n      onTabSelected(element);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                key={id}\n                data-cy=\"Tab\"\n                className={\n                  id === selectedTab.id\n                    ? 'is-active'\n                    : ''\n                }\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleTabSelect(id, selectedTab.id, tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/tab';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTabId] = useState(tabs[0]);\n  const { id, title } = selectedTab;\n\n  const onTabSelected = (currentTab: Tab) => {\n    const active = tabs.findIndex((tab) => (\n      tab.id === currentTab.id\n    ));\n\n    setSelectedTabId(tabs[active]);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        Selected tab is\n        {' '}\n        {title}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={id}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}